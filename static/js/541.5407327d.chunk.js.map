{"version":3,"file":"static/js/541.5407327d.chunk.js","mappings":"gOA0CA,UApCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,WAAMC,GAAN,iGAEeC,EAAAA,EAAAA,IAAgBD,GAF/B,OAEHE,EAFG,OAGTP,EAAaO,GACbL,GAAY,GAJH,gDAMTM,QAAQC,IAAR,MANS,yDAAH,sDASVL,EAAKR,EACN,GAAE,CAACA,IACJ,IAAQQ,EAASL,EAATK,KACR,OACE,0BACE,wBACGH,GACCG,EAAKM,KAAI,YAAiC,IAA9BL,EAA6B,EAA7BA,GAAIM,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACpB,OACE,2BACE,gBACEC,IAAG,UA3BA,mCA2BA,OAAoBD,GACvBE,IAAI,oBAEN,uBAAIH,MALGN,EAQZ,OAIV,C,mMCvCKU,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,EADlB,YAFpB,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,yBACsCO,IAH1D,uBAEKH,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2B3B,GAA3B,kGAEoBsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,oBACkBmB,IAHtC,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAWA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA+BV,GAA/B,kGAEoBsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,4BAC0BmB,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,kGAEoBsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,4BAC0BmB,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gF","sources":["components/Cast/Cast.js","components/services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../services/api';\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n  const [notEmpty, setNotEmpty] = useState(false);\n  useEffect(() => {\n    const cast = async id => {\n      try {\n        const castMovie = await getMovieCredits(id);\n        setMovieCast(castMovie);\n        setNotEmpty(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    cast(movieId);\n  }, [movieId]);\n  const { cast } = movieCast;\n  return (\n    <div>\n      <ul>\n        {notEmpty &&\n          cast.map(({ id, name, profile_path }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={`${BASE_URL_IMG}${profile_path}`}\n                  alt=\"actor portrait\"\n                />\n                <p>{name}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '8ba4fca3e9edd0651b67f536e979ea96';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMoviesTrends() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getOneMovie(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","useState","movieCast","setMovieCast","notEmpty","setNotEmpty","useEffect","cast","id","getMovieCredits","castMovie","console","log","map","name","profile_path","src","alt","API_KEY","BASE_URL","getMoviesTrends","axios","data","error","getMovies","query","getOneMovie","getMovieReviews"],"sourceRoot":""}