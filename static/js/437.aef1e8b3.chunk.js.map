{"version":3,"file":"static/js/437.aef1e8b3.chunk.js","mappings":"gOAyCA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMC,GAAN,iGAEUC,EAAAA,EAAAA,IAAgBD,GAF1B,OAEXE,EAFW,OAGjBP,EAAWO,GACXC,QAAQC,IAAIF,GACZL,GAAY,GALK,gDAOjBM,QAAQC,IAAR,MAPiB,yDAAH,sDAUlBL,EAAaR,EACd,GAAE,CAACA,IACJ,IAAQc,EAAYX,EAAZW,QACR,OACE,0BACE,wBACGT,GAAYS,EAAQC,OACnBD,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAAST,EAAS,EAATA,GAC9B,OACE,2BACE,uBAAIQ,KACJ,uBAAIC,MAFGT,EAKZ,KAED,yCAKT,C,mMCtCKU,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,EADlB,YAFpB,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,yBACsCO,IAH1D,uBAEKH,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2B3B,GAA3B,kGAEoBsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,oBACkBmB,IAHtC,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,kGAEoBsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,4BAC0BmB,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gFAUA,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAA+BV,GAA/B,kGAEoBsB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDpB,EADC,4BAC0BmB,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHX,QAAQY,MAAR,MAPG,gF","sources":["components/Reviews/Rewiews.js","components/services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../services/api';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [notEmpty, setNotEmpty] = useState(false);\n\n  useEffect(() => {\n    const reviewsMovie = async id => {\n      try {\n        const movieReviews = await getMovieReviews(id);\n        setReviews(movieReviews);\n        console.log(movieReviews);\n        setNotEmpty(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    reviewsMovie(movieId);\n  }, [movieId]);\n  const { results } = reviews;\n  return (\n    <div>\n      <ul>\n        {notEmpty && results.length ? (\n          results.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>No reviews</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '8ba4fca3e9edd0651b67f536e979ea96';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMoviesTrends() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getOneMovie(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","notEmpty","setNotEmpty","useEffect","reviewsMovie","id","getMovieReviews","movieReviews","console","log","results","length","map","author","content","API_KEY","BASE_URL","getMoviesTrends","axios","data","error","getMovies","query","getOneMovie","getMovieCredits"],"sourceRoot":""}