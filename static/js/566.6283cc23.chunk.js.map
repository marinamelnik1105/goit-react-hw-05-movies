{"version":3,"file":"static/js/566.6283cc23.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,EADlB,YAFpB,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,yBACsCQ,IAH1D,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,oBACkBV,IAHtC,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,kGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,4BAC0BV,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,kGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,4BAC0BV,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gF,kMC9CMO,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wTAeRE,EAAYF,EAAAA,GAAAA,IAAH,+CAGTG,EAAOH,EAAAA,GAAAA,GAAH,0CAGJI,EAAMJ,EAAAA,GAAAA,IAAH,wEAIHK,EAAYL,EAAAA,GAAAA,IAAH,0CAGTM,EAASN,EAAAA,GAAAA,IAAH,kEAINO,GAAcP,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mJ,SCsDxB,EAxEqB,WAAO,IAAD,IACjBJ,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAAsCa,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAC3DC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,WAAMC,GAAN,iGAEazB,EAAAA,EAAAA,IAAYyB,GAFzB,OAEPC,EAFO,OAGbV,EAAeU,GACf9B,QAAQ+B,IAAID,GAJC,gDAMb9B,QAAQ+B,IAAR,MANa,yDAAH,sDASdH,EAASvB,EACV,GAAE,CAACA,IACJL,QAAQ+B,IAAIV,GACZ,IAAQW,EACNb,EADMa,MAAOC,EACbd,EADac,KAAMC,EACnBf,EADmBe,YAAaC,EAChChB,EADgCgB,OAAQC,EACxCjB,EADwCiB,SAAUC,EAClDlB,EADkDkB,aAEpD,OACE,UAAC1B,EAAD,YACE,SAACH,EAAD,CAAU8B,GAAIf,EAAoBgB,QAAlC,mBACA,UAACzB,EAAD,YACE,SAACD,EAAD,CAAK2B,IAAG,UA1BK,mCA0BL,OAAoBN,GAAeO,IAAI,kBAC/C,4BACE,wBAAKT,GAASC,KACd,mCAAWI,EAAX,QACA,UAACtB,EAAD,YACE,oCACA,SAACH,EAAD,UACGuB,GACCA,EAAOO,KAAI,WAAeC,GAAf,IAAGd,EAAH,EAAGA,GAAII,EAAP,EAAOA,KAAP,OACT,kCACMA,GADN,OACaU,IAAUR,EAAOS,OAAS,EAAI,KAAO,KADzCf,EADA,UAOjB,0BACE,yCACCO,YAKP,UAACxB,EAAD,YACE,yBACE,SAACI,EAAD,CAAasB,GAAG,OAAhB,sBAEF,yBACE,SAACtB,EAAD,CAAasB,GAAG,UAAhB,4BAGJ,SAAC,EAAAO,SAAD,CACEC,UACE,0BACE,SAAC,KAAD,CACEC,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,4BAPlB,UAYE,SAAC,KAAD,QAIP,C","sources":["components/services/api.js","pages/MovieDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8ba4fca3e9edd0651b67f536e979ea96';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMoviesTrends() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getOneMovie(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const BackLink = styled(Link)`\n  border: 1px solid black;\n  border-radius: 5px;\n  min-width: 20px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  background-color: #30305c;\n  color: #fff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: #7979ff;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 30px 15px;\n`;\nexport const List = styled.ul`\n  display: flex;\n`;\nexport const Img = styled.img`\n  width: 200px;\n  margin: 21px 29px 14px 0px;\n`;\nexport const MovieInfo = styled.div`\n  display: flex;\n`;\nexport const Genres = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const LinkDetails = styled(Link)`\n  padding: 5px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    color: #7979ff;\n  }\n`;\n","import { FallingLines } from 'react-loader-spinner';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getOneMovie } from '../components/services/api';\nimport {\n  BackLink,\n  Container,\n  Genres,\n  Img,\n  LinkDetails,\n  List,\n  MovieInfo,\n} from './MovieDetails.styled';\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetals, setMovieDetals] = useState([]);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  useEffect(() => {\n    const oneMovie = async id => {\n      try {\n        const oneMovieDet = await getOneMovie(id);\n        setMovieDetals(oneMovieDet);\n        console.log(oneMovieDet);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    oneMovie(movieId);\n  }, [movieId]);\n  console.log(location);\n  const { title, name, poster_path, genres, overview, vote_average } =\n    movieDetals;\n  return (\n    <Container>\n      <BackLink to={backLinkLocationRef.current}>Back</BackLink>\n      <MovieInfo>\n        <Img src={`${BASE_URL_IMG}${poster_path}`} alt=\"poster movie\" />\n        <div>\n          <h2>{title || name}</h2>\n          <p>Rating:{vote_average} </p>\n          <Genres>\n            <p>Genres:</p>\n            <List>\n              {genres &&\n                genres.map(({ id, name }, index) => (\n                  <li key={id}>\n                    {`${name}${index !== genres.length - 1 ? ', ' : ''}`}\n                  </li>\n                ))}\n            </List>\n          </Genres>\n          <p>\n            <span>Overview: </span>\n            {overview}\n          </p>\n        </div>\n      </MovieInfo>\n\n      <List>\n        <li>\n          <LinkDetails to=\"cast\">Cast </LinkDetails>\n        </li>\n        <li>\n          <LinkDetails to=\"reviews\">Reviews </LinkDetails>\n        </li>\n      </List>\n      <Suspense\n        fallback={\n          <div>\n            <FallingLines\n              color=\"#7979ff\"\n              width=\"100\"\n              visible={true}\n              ariaLabel=\"falling-lines-loading\"\n            />\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","getMoviesTrends","axios","data","console","error","getMovies","query","getOneMovie","movieId","getMovieCredits","getMovieReviews","BackLink","styled","Link","Container","List","Img","MovieInfo","Genres","LinkDetails","useParams","useState","movieDetals","setMovieDetals","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","oneMovie","id","oneMovieDet","log","title","name","poster_path","genres","overview","vote_average","to","current","src","alt","map","index","length","Suspense","fallback","color","width","visible","ariaLabel"],"sourceRoot":""}