{"version":3,"file":"static/js/900.ae2b24ef.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.js","components/services/api.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.js","pages/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const MovieItem = ({ results }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <div>\n      {results.results.map(({ id, title, poster_path, name }) => (\n        <div key={id}>\n          <Link\n            key={id}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            id={id}\n          >\n            <img src={`${BASE_URL_IMG}${poster_path}`} alt=\"poster movie\" />\n            <p>{title || name}</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '8ba4fca3e9edd0651b67f536e979ea96';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMoviesTrends() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getOneMovie(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikField } from 'formik';\n// export const Header = styled.header`\n//   top: 0;\n//   left: 0;\n//   position: sticky;\n//   z-index: 1100;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   min-height: 64px;\n//   padding-right: 24px;\n//   padding-left: 24px;\n//   padding-top: 12px;\n//   padding-bottom: 12px;\n//   color: #fff;\n//   background-color: #3f51b5;\n//   box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n//     0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n// `;\nexport const Form = styled(FormikForm)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\nexport const BtnLabel = styled.span`\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n`;\nexport const Field = styled(FormikField)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\nimport { BtnLabel, FormBtn } from './SearchMovies.styled';\nimport { Form, Field } from './SearchMovies.styled';\nimport { BiSearch } from 'react-icons/bi';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchMovies = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('value');\n  let initialValues = { value: '' };\n\n  console.log(name);\n  const handleSubmit = ({ value }, action) => {\n    if (value === '' || null) return;\n    if (name === '' || null) return;\n\n    const nextParams = name === '' ? {} : { value };\n    setSearchParams(nextParams);\n    action.resetForm();\n    return onSubmit({ value });\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <Form>\n        <FormBtn type=\"submit\">\n          <BtnLabel>\n            <BiSearch size=\"35\" />\n          </BtnLabel>\n        </FormBtn>\n        <Field\n          name=\"value\"\n          type=\"text\"\n          placeholder=\"Search images and photos\"\n        />\n      </Form>\n    </Formik>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport { useEffect, useState } from 'react';\nimport * as api from '../components/services/api';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [notEmpty, setNotEmpty] = useState(false);\n  const [reqId, setReqId] = useState(null);\n  useEffect(() => {\n    const getMovies = async query => {\n      if (!query) return;\n\n      try {\n        const results = await api.getMovies(query);\n        console.log(results);\n        setResults(results);\n        setNotEmpty(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies(search);\n  }, [search, reqId]);\n\n  const handleSubmit = ({ value }) => {\n    setSearch(value);\n    setResults([]);\n    setNotEmpty(false);\n    setReqId(nanoid());\n  };\n\n  return (\n    <div>\n      <SearchMovies onSubmit={handleSubmit} />\n      {notEmpty && <MovieItem results={results} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieItem","results","location","useLocation","console","log","map","id","title","poster_path","name","to","state","from","src","alt","API_KEY","BASE_URL","getMoviesTrends","axios","data","error","getMovies","query","getOneMovie","movieId","getMovieCredits","getMovieReviews","Form","styled","FormikForm","FormBtn","BtnLabel","Field","FormikField","SearchMovies","onSubmit","useSearchParams","searchParams","setSearchParams","get","initialValues","value","action","resetForm","type","size","placeholder","useState","search","setSearch","setResults","notEmpty","setNotEmpty","reqId","setReqId","useEffect","api","nanoid"],"sourceRoot":""}