{"version":3,"file":"static/js/900.07c48c07.chunk.js","mappings":"gNAEaA,EAAOC,EAAAA,GAAAA,GAAH,6GAOJC,EAAOD,EAAAA,GAAAA,GAAH,mKAOJE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8MAaVI,EAAMJ,EAAAA,GAAAA,IAAH,6C,mBCvBHK,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAQA,QAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,KAA3B,OACnB,SAACZ,EAAD,WACE,UAACC,EAAD,CAEEY,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMT,GACfG,GAAIA,EAJN,WAME,SAACN,EAAD,CAAKa,IAAG,UAfC,mCAeD,OAAoBL,GAAeM,IAAI,kBAC/C,uBAAIP,GAASE,MANRH,IAFEA,EADQ,KAe1B,C,mMCxBKS,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,EADlB,YAFpB,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,yBACsCQ,IAH1D,uBAEKJ,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,oBACkBV,IAHtC,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,kGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,4BAC0BV,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,kGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDS,EADC,4BAC0BV,IAH9C,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,MAAR,MAPG,gF,wKC7CMO,GAAOhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAH,mMAUJkC,EAAUlC,EAAAA,GAAAA,OAAH,+UAgBPmC,EAAWnC,EAAAA,GAAAA,KAAH,4JASRoC,GAAQpC,EAAAA,EAAAA,IAAOqC,EAAAA,GAAPrC,CAAH,0P,4BChCLsC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM7B,EAAO4B,EAAaE,IAAI,SAY9B,OACE,SAAC,KAAD,CAAQC,cAZU,CAAEC,MAAO,IAYWN,SAVnB,SAAC,EAAWO,GAAY,IAArBD,EAAoB,EAApBA,MACtB,GAAc,KAAVA,GACS,KAAThC,EAKJ,OAFA6B,EAD4B,KAAT7B,EAAc,CAAC,EAAI,CAAEgC,MAAAA,IAExCC,EAAOC,YACAR,EAAS,CAAEM,MAAAA,GACnB,EAEC,UACE,UAACb,EAAD,YACE,SAACE,EAAD,CAASc,KAAK,SAAd,UACE,SAACb,EAAD,WACE,SAAC,MAAD,CAAUc,KAAK,YAGnB,SAACb,EAAD,CACEvB,KAAK,QACLmC,KAAK,OACLE,YAAY,iCAKrB,E,oBCSD,EAtCe,WAAO,IAAD,EACnB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAO7C,EAAP,KAAgB8C,EAAhB,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAwChB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMe,EAAM,UAAGhB,EAAaE,IAAI,gBAApB,QAAgC,IAE5Ce,EAAAA,EAAAA,YAAU,WACR,IAAMhC,EAAS,mCAAG,WAAMC,GAAN,0EACXA,EADW,0EAIQgC,EAAAA,GAAchC,GAJtB,OAIRrB,EAJQ,OAKdkB,QAAQoC,IAAItD,GACZ8C,EAAW9C,GACXgD,GAAY,GAPE,kDASd9B,QAAQoC,IAAR,MATc,0DAAH,sDAYflC,EAAU+B,EACX,GAAE,CAACA,EAAQF,IASZ,OACE,4BACE,SAACjB,EAAD,CAAcC,SATG,SAAC,GAAe,IAAbM,EAAY,EAAZA,MACtBH,EAAgB,CAAEe,OAAQZ,IAC1BO,EAAW,IACXE,GAAY,GACZE,GAASK,EAAAA,EAAAA,MACV,IAKIR,IAAY,SAAC,IAAD,CAAW/C,QAASA,MAGtC,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/services/api.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.js","pages/Movies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin: 30px;\n`;\nexport const Item = styled.li`\n  width: 200px;\n  border: 1px solid black;\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.5) 4px 4px 9px 3px; ;\n`;\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  height: 100%;\n\n  transition: color 0.5s ease;\n  :hover,\n  :focus {\n    color: #7979ff;\n  }\n`;\nexport const Img = styled.img`\n  object-fit: fill;\n`;\n","import { LinkStyled } from 'components/MoviesList/MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport { Img, Item, List } from './MoviesList.styled';\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const MovieItem = ({ results }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {results.results.map(({ id, title, poster_path, name }) => (\n        <Item key={id}>\n          <LinkStyled\n            key={id}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            id={id}\n          >\n            <Img src={`${BASE_URL_IMG}${poster_path}`} alt=\"poster movie\" />\n            <p>{title || name}</p>\n          </LinkStyled>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '8ba4fca3e9edd0651b67f536e979ea96';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMoviesTrends() {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovies(query) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getOneMovie(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport async function getMovieReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\nimport { Form as FormikForm, Field as FormikField } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\nexport const BtnLabel = styled.span`\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n`;\nexport const Field = styled(FormikField)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\nimport { BtnLabel, FormBtn } from './SearchMovies.styled';\nimport { Form, Field } from './SearchMovies.styled';\nimport { BiSearch } from 'react-icons/bi';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchMovies = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('value');\n  let initialValues = { value: '' };\n\n  const handleSubmit = ({ value }, action) => {\n    if (value === '' || null) return;\n    if (name === '' || null) return;\n\n    const nextParams = name === '' ? {} : { value };\n    setSearchParams(nextParams);\n    action.resetForm();\n    return onSubmit({ value });\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <Form>\n        <FormBtn type=\"submit\">\n          <BtnLabel>\n            <BiSearch size=\"35\" />\n          </BtnLabel>\n        </FormBtn>\n        <Field\n          name=\"value\"\n          type=\"text\"\n          placeholder=\"Search images and photos\"\n        />\n      </Form>\n    </Formik>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { MovieItem } from 'components/MoviesList/MoviesList';\nimport { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport { useEffect, useState } from 'react';\nimport * as api from '../components/services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [results, setResults] = useState([]);\n  const [notEmpty, setNotEmpty] = useState(false);\n  const [reqId, setReqId] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('value') ?? '';\n\n  useEffect(() => {\n    const getMovies = async query => {\n      if (!query) return;\n\n      try {\n        const results = await api.getMovies(query);\n        console.log(results);\n        setResults(results);\n        setNotEmpty(true);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies(search);\n  }, [search, reqId]);\n\n  const handleSubmit = ({ value }) => {\n    setSearchParams({ search: value });\n    setResults([]);\n    setNotEmpty(false);\n    setReqId(nanoid());\n  };\n\n  return (\n    <div>\n      <SearchMovies onSubmit={handleSubmit} />\n      {notEmpty && <MovieItem results={results} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","LinkStyled","Link","Img","MovieItem","results","location","useLocation","map","id","title","poster_path","name","to","state","from","src","alt","API_KEY","BASE_URL","getMoviesTrends","axios","data","console","error","getMovies","query","getOneMovie","movieId","getMovieCredits","getMovieReviews","Form","FormikForm","FormBtn","BtnLabel","Field","FormikField","SearchMovies","onSubmit","useSearchParams","searchParams","setSearchParams","get","initialValues","value","action","resetForm","type","size","placeholder","useState","setResults","notEmpty","setNotEmpty","reqId","setReqId","search","useEffect","api","log","nanoid"],"sourceRoot":""}